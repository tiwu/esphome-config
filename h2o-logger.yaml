substitutions:
  name: h2o-logger
  lowername: h2o_logger
  friendly_name: H2O Logger
  device_description: "H2O logger module for Water meter reading and temp/hum monitoring"
  version: '1.4'

packages:
  device_base: !include common/device_base.yaml
  wifi: !include common/wifi.yaml

esphome:
  on_boot:
    then:
      - pulse_meter.set_total_pulses:
          id: water_meter
          value: !lambda return id(total_water) * 10000.0;

esp8266:
  board: d1_mini
  restore_from_flash: true

preferences:
  flash_write_interval: 20min

globals:
  - id: total_water
    type: float
    restore_value: true

# Button to reset total pulse count from HA
button:
  - platform: template
    name: 'Waterverbruik zet stand'
    entity_category: config
    on_press:
      then:
        - pulse_meter.set_total_pulses:
            id: water_meter
            value: !lambda return id(watermeter_input).state * 10000.0;
  - platform: template
    name: 'Save to Flash'
    entity_category: config
    on_press:
      then:
        - delay: 1s
        - lambda: !lambda global_preferences->sync();


# read HA input sensor to set initial value
sensor:
  - platform: homeassistant
    entity_id: input_number.watermeter_stand_input
    accuracy_decimals: 4
    id: watermeter_input

# DHT sensor, GPIO 4
  - platform: dht
    model: DHT11
    pin:
      number: 4
      mode: INPUT_PULLUP
    temperature:
      name: temperature
    humidity:
      name: humidity
    update_interval: 60s

# Water meter
  - platform: pulse_meter
    id: water_meter
    pin:
      number: 14
      mode: INPUT_PULLUP
    internal_filter: 250us
    timeout: 1min
    name: water_verbruik
    icon: "mdi:water"
    unit_of_measurement: 'L'
    device_class: volume
    accuracy_decimals: 1
    filters:
      # 4-digit = 1 pulse per 0.5L | https://www.2-wire.net/wp-content/uploads/2019/01/S02-Elster-manual.pdf
      # v1.3 1/0.1l
      - multiply: 0.1
    total:
      name: water_meterstand
      unit_of_measurement: mÂ³
      accuracy_decimals: 4
      device_class: water
      state_class: total_increasing
      filters:
        # 10.000 puls/m3
        - lambda: !lambda |-
            id(total_water) = x * 0.0001;
            ESP_LOGD("water meterstand", "Meterstand: %f", id(total_water));
            return id(total_water);
    on_raw_value:
      then:
        - logger.log: 
            format: "pulse_meter counted  %.1f pulses"
            args: [ 'x' ]